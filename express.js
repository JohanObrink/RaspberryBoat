// Generated by CoffeeScript 1.3.1
(function() {
  var app, bootstrap, compile, express, stylus, frontCamStream, backCamStream;

  express = require('express');

  app = express.createServer();

  module.exports = app;

  bootstrap = require('bootstrap-stylus');

  stylus = require('stylus');

  frontCamStream = require('./video/gstreamer.js').create({
    snapshotInterval: 500,
    boundary: "livestreamnotlikeapplehttplivestreaming",
    streamSourceJpg: __dirname + "/public/streams/gstreamer-front.jpg"
  });
  backCamStream = require('./video/gstreamer.js').create({
    snapshotInterval: 500,
    boundary: "livestreamnotlikeapplehttplivestreaming",
    streamSourceJpg: __dirname + "/public/streams/gstreamer-back.jpg"
  });

  compile = function(str, path) {
    return stylus(str).set('filename', path).use(bootstrap());
  };

  app.configure = function() {
    app.set('views', __dirname + '/views');
    app.set('view engine', 'jade');
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(stylus.middleware({
      src: __dirname + '/public',
      compile: compile
    }));
    app.use(app.router);
    return app.use(express["static"](__dirname + '/public'));
  };

  app.configure('development', function() {
    return app.use(express.errorHandler({
      dumpExceptions: true,
      showStack: true
    }));
  });

  app.configure('production', function() {
    return app.use(express.errorHandler());
  });

  app.get('/', function(req, res) {
    return res.render('index');
  });

  app.get('/video', function(req, res) {
    return res.render('video');
  });

  app.get('/videoStreamFront', function(req, res) {
    frontCamStream.addRequest(req,res);
  });

  app.get('/videoStreamBack', function(req, res) {
    backCamStream.addRequest(req,res);
  });
}).call(this);
